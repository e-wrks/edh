{##
 # this module is meant to be imported by an Edh language server, into every
 # meta world's root scope at analysis time, reflecting definition information
 # of the corresponding host artifacts at runtime.
 #
 # the purpose is for sakes of tooling functionalities, typically an IDE like
 # VSCode.
 #
 #}

# this module should never get imported by any Edh interpreter for the run
error( 'Executing meta module: ' ++ __name__ )


export {

  __StringType_bytes__ :: ( StringType ) -> BlobType
  {##
   # virtual property of a string value, encoding the string into utf-8 bytes
   # as a blob value
   #}
  method __StringType_bytes__ ( s ) {
    s :: StringType
  }

  __BlobType_utf8string__ :: ( BlobType ) -> StringType
  {##
   # virtual property of a blob value, decoding (assuming utf-8 bytes) into a
   # string
   #}
  method __BlobType_utf8string__( b ) {
    b :: BlobType
  }

  UUID
  :: ( uuid'str=None ) -> UUIDType
  || ( uuid'ns, uuid'word1, uuid'word2, ) -> UUIDType
  {##
   #
   #}
  method UUID( uuid'str=None ) {
    uuid'str :: StringType | None
  }
}

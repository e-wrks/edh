
# a language server will follow this import to find meta artifacts,
# while an interpreter will import nothing from the meta host module
import * 'batteries/meta'


{## For source level compatibility with JavaScript #}
export NaN := nan


export method abs( n ) if n is nan then nan else n<0 and -n or n


export method max( *all ) {
  n = nan
  for i from all do if (
    n is nan or ( i is not nan and i > n )
  ) then n = i
  return n
}

export method min( *all ) {
  n = nan
  for i from all do if (
    n is nan or ( i is not nan and i < n )
  ) then n = i
  return n
}


{## Resembles `Number.prototype.toFixed()` as in JavaScript #}
export method __Decimal_toFixed__(n) return method toFixed(digs= 0) {
  if n is nan then return "NaN"
  amp = 10**digs
  # TODO pad trailing zeros as appropriate, avoid scientific notations
  #      maybe need Haskell impl. for those?
  return repr$ (amp * n).round / amp
}

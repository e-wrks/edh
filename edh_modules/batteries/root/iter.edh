
# a language server will follow this import to find meta artifacts,
# while an interpreter will import nothing from the meta host module
import * 'batteries/meta'


export {


  {## resembles `zip` in Haskell #}
  generator zip( xs, ys ) {
    # TODO resemble `zip` in Python instead, i.e. to support arbitrary number of arguments
    # seemingly this will need an iterator protocol similar to Python's
    #   https://wiki.python.org/moin/Iterator
    # though we probably won't need `__next__()` as in Python, we can have a procedure returned in response to `iter()` call, which returns `nil` instead of raising `StopIteration` to signal the done of iteration

    while true case xs of {
      { x :> xs } -> case ys of {
        { y :> ys } -> {
          yield ( x, y )
        } return nil
      } return nil
    }

  }

}

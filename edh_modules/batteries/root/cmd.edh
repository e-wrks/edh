
# a language server will follow this import to find meta artifacts,
# while an interpreter will import nothing from the meta host module
import * 'batteries/meta'


{##
 # Class `Command` is used to define parametric command objects
 #}
export data Command ( cmd, ***apk ) {

  method __repr__ () case this.apk of {
    {()} -> str( this.cmd )
    this.cmd ++ this.apk
  }

  method __call__( ***apk ) constructor( that ) ( this.cmd, ***apk )

}

export {

  {##
   # The `quit` command is usually interpreted by a REPL to stop running
   #}
  quit = Command( 'quit' )

  {##
   # The `dir` command is usually interpreted by a REPL to show you what's
   # inside some scope
   #
   # The target scope(s) can usually be specified as arguments to this command,
   # while current scope is implied when no one is specified
   #}
  dir = Command( 'dir' )

  {##
   # A bookmark usually lead you to some location of interest,
   # via code navigation
   #
   # Being a command per se, arbitrary detailed data can be associated with a
   # bookmark attribute, by _calling_ it, e.g.
```edh
amazing'algorithm'21 = bookmark(
  type= 'algo', category= 'sort', complexity= 'O(log N)',
)
```
   #}
  bookmark = Command( 'bookmark' )

}

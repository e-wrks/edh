{
  evs = sink
  stopSig = sink

  go {

    defer {
      console.info <| "I'm really done."
    }

    perceive stopSig {
      nil -> {
        console.warn <| '  🎬  stopping because end-of-stream'
        fallthrough
      }
      { ev } -> {
        console.info <| '  🎬  stopping because: ' ++ ev
        fallthrough
      }
      break # break from a perceiver terminates the thread
    }

    for ev from evs do {
      console.info <| '  🎐  sth happening: ' ++ ev
    }

  }

}

# wait a second
for _ from console.everySeconds( 1 ) do break
evs <- '  🛎️  ding.ding..'; pass
# stopSig <- "don't do that!" ;pass

# wait a second
for _ from console.everySeconds( 1 ) do break
evs <- '  🍃  chill..chill...'; pass
stopSig <- "that's enough!"; pass

# wait a second
for _ from console.everySeconds( 1 ) do break
evs <- '  ☎️  ling.ling..ling...'; pass
# stopSig <-nil

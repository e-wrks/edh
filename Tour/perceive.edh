{
  evs = chan
  stopSig = chan

  go {@
    perceive evs { ev } -> {
      console.info <| '  🎐  sth perceived: ' ++ ev
    }

    # keep this thread running forever
    for _ from console.everySeconds(60) do pass
  @}

  go {@

    defer {
      console.info <| "I'm really done."
    }

    perceive stopSig {
      nil -> {
        console.warn <| '  🎬  stopping because end-of-stream'
        fallthrough
      }
      { ev } -> {
        console.info <| '  🎬  stopping because: ' ++ ev
        fallthrough
      }
      break # break from a perceiver terminates the thread
    }

    for ev from evs do {
      console.info <| '  🎉  sth received: ' ++ ev
    }

  @}

}

# wait a second
for _ from console.everySeconds( 1 ) do break
evs <- '  🛎️  ding.ding..'
# stopSig <- "don't do that!"

# wait a second
for _ from console.everySeconds( 1 ) do break
evs <- '  🍃  chill..chill...'
stopSig <- "that's enough!"

# wait a second
for _ from console.everySeconds( 1 ) do break
evs <- '  ☎️  ling.ling..ling...'
# stopSig <-nil

# wait a second
for _ from console.everySeconds( 1 ) do break
